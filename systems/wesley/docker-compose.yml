# services: 3000 and up
# databases: 3300 and up

networks:
  gitea:
    driver: bridge

services:
  watchtower:
    container_name: watchtower
    entrypoint:
      - /watchtower
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/London
      WATCHTOWER_POLL_INTERVAL: 60
      WATCHTOWER_CLEANUP: true
      WATCHTOWER_REMOVE_VOLUMES: true
      WATCHTOWER_LABEL_ENABLE: true
      WATCHTOWER_INCLUDE_RESTARTING: true
      WATCHTOWER_TIMEOUT: 30m
      WATCHTOWER_WARN_ON_HEAD_FAILURE: never
      WATCHTOWER_ROLLING_RESTART: true
      PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    expose:
      - 8080/tcp
    image: containrrr/watchtower:latest
    labels:
      com.centurylinklabs.watchtower: true
      com.centurylinklabs.watchtower.enable: true
    restart: always
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
    working_dir: /

  nginx:
    image: 'docker.io/jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    container_name: nginx
    command: bash -c "sed -i '/{% include \"_hsts_map.conf\" %}/d' /app/templates/_location.conf; while true; do sleep 86400; done"
    depends_on:
      - mariadb
    environment:
      PUID: 1000
      PGID: 1000
      DB_MYSQL_HOST: "mariadb"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "${MYSQL_NGINX_USER}"
      DB_MYSQL_PASSWORD: "${MYSQL_NGINX_PASSWORD}"
      DB_MYSQL_NAME: "${MYSQL_NGINX_DB}"
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - /mnt/storage/docker-services/nginx/data:/data
      - /mnt/storage/docker-services/nginx/letsencrypt:/etc/letsencrypt
      - /mnt/storage/docker-services/nginx/_hsts_map.conf:/app/templates/_hsts_map.conf
    networks:
      - default
      - gitea

  vaultwarden:
    image: vaultwarden/server:latest
    restart: unless-stopped
    container_name: vaultwarden
    env_file:
      - .env
    environment:
      ENABLE_WEBSOCKET: true
      PUSH_ENABLED: false
      PUSH_RELAY_URI: https://api.bitwarden.eu
      DOMAIN: https://vault.meza.gg
      SENDS_ALLOWED: false
      EXPERIMENTAL_CLIENT_FEATURE_FLAGS: fido2-vault-credentials,autofill-v2,autofill-overlay
    volumes:
      - /mnt/storage/docker-service/vaultwarden/:/data/

  mariadb:
    image: lscr.io/linuxserver/mariadb:latest
    container_name: mariadb
    env_file:
      - .env
    environment:
      PUID: 1000
      PGID: 1000
      TZ: Europe/London
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
    volumes:
      - /mnt/storage/docker-services/mariadb/config:/config
    labels:
      com.centurylinklabs.watchtower: true
      com.centurylinklabs.watchtower.enable: true
    ports:
      - "3306:3306"
    expose:
      - 3306
    restart: unless-stopped
    networks:
      - gitea

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: always
    environment:
      ADMINER_DESIGN: dracula
    expose:
      - 8080
    networks:
      - gitea
    depends_on:
      - mariadb

  gitea:
    image: vsbmeza/homelab:gitea-latest
    container_name: gitea
    depends_on:
      - mariadb
    labels:
      com.centurylinklabs.watchtower: true
      com.centurylinklabs.watchtower.enable: true
    environment:
      USER_UID: 1000
      USER_GID: 1000
      GIT_DISCOVERY_ACROSS_FILESYSTEM: 1
      GIT_TERMINAL_PROMPT: 1
      DOMAIN: wesley.meza.gg
      ROOT_URL: https://wesley.meza.gg/gitea
    restart: unless-stopped
    networks:
      - gitea
    volumes:
      - /mnt/storage/docker-services/gitea/data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - 3000
    ports:
      - "222:22"

  dozzle:
    container_name: dozzle
    labels:
      com.centurylinklabs.watchtower: true
      com.centurylinklabs.watchtower.enable: true
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    expose:
      - 8080
    healthcheck:
      test: [ "CMD", "/dozzle", "healthcheck" ]
      interval: 3s
      timeout: 30s
      retries: 5
      start_period: 30s

  adguard:
    image: adguard/adguardhome
    labels:
      com.centurylinklabs.watchtower: true
      com.centurylinklabs.watchtower.enable: true
    container_name: adguard
    restart: unless-stopped
    volumes:
      - "/mnt/storage/docker-services/adguard/work:/opt/adguardhome/work"
      - "/mnt/storage/docker-services/adguard/conf:/opt/adguardhome/conf"
    expose:
      - 3001
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 853:853/tcp

  sqs:
    image: roribio16/alpine-sqs:latest
    container_name: sqs
#    ports:
#      - "9324:9324"
#      - "9325:9325"
    labels:
      com.centurylinklabs.watchtower: true
      com.centurylinklabs.watchtower.enable: true
    volumes:
      - /mnt/storage/docker-services/sqs/sqs-insight.conf:/opt/config/sqs-insight.conf
      - /mnt/storage/docker-services/sqs/elasticmq.conf:/opt/config/elasticmq.conf
